{{ $depName := printf "%s" (include "deploymentName" $) }}

{{ $kindName := "" }}
{{ $apiVer := "" }}
{{ range $index, $dep := .Values.global.tier}}
{{ if ($dep.volumeClaimTemplate) }}
{{ $kindName = "StatefulSet" }}
{{ $apiVer = "apps/v1" }}
{{ else }}
{{ $kindName = "Deployment" }}
{{ $apiVer = "apps/v1" }}
{{ end }}

{{ $containerWaitList := list  }}
{{ if (eq (include "performOnlyDeployment" $) "true") }}
  {{ if and $.Values.pegasearch.enabled (not $.Values.pegasearch.externalSearchService) }}
    {{ $containerWaitList = append $containerWaitList "waitForPegaSearch" }}
  {{ end }}
  {{ if (eq (include "cassandraEnabled" $) "true" ) }}
    {{ $containerWaitList = append $containerWaitList "waitForCassandra" }}
  {{ end }}
{{ end }}

{{ if (eq (include "performInstallAndDeployment" $) "true") }}
  {{ $containerWaitList = append $containerWaitList "waitForPegaDBInstall" }}
  {{ if and $.Values.pegasearch.enabled (not $.Values.pegasearch.externalSearchService) }}
    {{ $containerWaitList = append $containerWaitList "waitForPegaSearch" }}
  {{ end }}
  {{ if (eq (include "cassandraEnabled" $) "true" ) }}
    {{ $containerWaitList = append $containerWaitList "waitForCassandra" }}
  {{ end }}
{{ end }}

# Allowing ZDT wait containers to trigger only in case of upgradeType as zero-downtime, so that custom upgrade moves forward in case of failure in ZDT
{{ if ( and  (eq (include "performUpgradeAndDeployment" $) "true") (eq $.Values.installer.upgrade.upgradeType "zero-downtime")) }}
  {{ $containerWaitList = append $containerWaitList "waitForPegaDBZDTUpgrade" }}
{{ end }}

{{- if or (eq (include "performOnlyDeployment" $) "true") (eq (include "performInstallAndDeployment" $) "true") (eq (include "performUpgradeAndDeployment" $) "true") }}
  {{ template "pega.deployment" dict "root" $ "node" $dep "name" (printf "%s-%s" $depName $dep.name) "tierName" $dep.name "kind" $kindName "apiVersion" $apiVer "nodeType" $dep.nodeType "initContainers" $containerWaitList "custom" $dep.custom }}
{{- end }}
{{ end }}
